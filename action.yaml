name: "Build Docker Image"
description: "Builds a docker image for Smile. Must be run on internal runners with the `category-applications` label."
inputs:
  docker_repo_url:
    description: "URL of the docker repo where images will be uploaded."
    required: true
  tag_prefix:
    description: "Images will be tagged with the git SHA1, optionally prefixed by this value."
    required: false
  additional_args:
    description: "Additional arguments that will be passed to the `build-docker-image` script, e.g. to define build arguments for the docker image."
    required: false
outputs:
  image:
    description: "Full path to the image created."
    value: ${{ steps.record_image.outputs.image }}
  tag:
    description: "Tag of the image created."
    value: ${{ steps.record_image.outputs.tag }}
runs:
  using: "composite"
  steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Validate if Image Exist
      id: docker_image_validation
      shell: bash
      continue-on-error: true
      run: | 
        REPO_URL=${{ inputs.docker_repo_url }}
        REPO_NAME="${REPO_URL##*/}"
        aws ecr describe-images --repository-name $REPO_NAME --image-ids imageTag=${{ inputs.tag_prefix}}${{ github.sha }} --output json --no-cli-pager > /dev/null 2>&1
        if [ $? -eq 0 ]; then
            echo "docker_image_exist=true" >> $GITHUB_OUTPUT
        else
            echo "docker_image_exist=false" >> $GITHUB_OUTPUT
        fi
    - name: Build and Upload Docker Image
      id: build-docker
      if: steps.docker_image_validation.outputs.docker_image_exist == false
      shell: bash
      # Note: The build-docker-image script is provided by gruntworks https://github.com/gruntwork-io/terraform-aws-ci/tree/master/modules/build-helpers,
      #       and it also pushes to the given repo with the given tag
      run: build-docker-image
              --docker-image-name "${{ inputs.docker_repo_url }}"
              --docker-image-tag "${{ inputs.tag_prefix}}${{ github.sha }}"
              ${{ inputs.additional_args }}
    - name: Record image details
      id: record_image
      shell: bash
      run: |
        echo "image=${{ inputs.docker_repo_url }}:${{ inputs.tag_prefix }}${{ github.sha }}" >> $GITHUB_OUTPUT
        echo "tag=${{ inputs.tag_prefix }}${{ github.sha }}" >> $GITHUB_OUTPUT
